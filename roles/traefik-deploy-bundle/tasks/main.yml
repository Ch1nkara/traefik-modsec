---
- name: Scp the bundle to the webserver
  copy:
    src: "{{ bundle_local_path }}"
    dest: "traefik_bundle.tar.gz"

- name: Extract the bundle archive
  shell: cd /opt && tar xvf ~/traefik_bundle.tar.gz && cd ~

- name: debug
  debug:
    var: svr


- name: handle default values
  set_fact:
    svr: "{{ svr | json_query('[].{name:name, http_traefik_port:http_traefik_port || `8880`, https_traefik_port:https_traefik_port || `8843`, server_name:server_name || `_`, https_port: https_port || `443`, http_port: http_port || `80`}') }}"



- name: upload templates conf files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - src: "templates/traefik_service.j2"
      dest: "/etc/systemd/system/traefik.service"
    - src: "templates/static.j2"
      dest: "/opt/traefik_bundle/static.yml"
    - src: "templates/dynamic.j2"
      dest: "/opt/traefik_bundle/dynamic.yml"
 
- name: Change ownership of traefik bundle
  file:
    path: "/opt/traefik_bundle"
    owner: "{{ unprivileged_user }}"
    group: "{{ unprivileged_user }}"
    recurse: true

- name: Change permissions to make traefik executable
  file:
    path: /opt/traefik_bundle/traefik
    mode: +x

- name: reload daemons
  systemd:
    daemon_reload: true

- name: Start traefik
  systemd:
      name: traefik
      state: started
# Dirty fallback way to start traefik
#- name: Start traefik
#  shell: cd /opt/traefik_bundle && nohup su www-data -s /bin/bash -c "/opt/traefik_bundle/traefik --configFile static.yml" >log.txt 2>&1 &

- name: Extract unique http_ports
  set_fact:
    unique_http_ports: "{{ svr | map(attribute='http_port') | list | unique }}"

- name: Extract unique https_ports
  set_fact:
    unique_https_ports: "{{ svr | map(attribute='https_port') | list | unique }}"

- name: Ip tables hijacking http -> traefik_http
  shell: "iptables -t nat -A PREROUTING -p tcp '!' -i lo --dport {{ item }} -j DNAT --to  :{{ hostvars[inventory_hostname]['svr'] | selectattr('http_port', 'equalto', item) | map(attribute='http_traefik_port') | first }}"
  loop: "{{ unique_http_ports }}"

- name: Ip tables hijacking https -> traefik_https
  shell: "iptables -t nat -A PREROUTING -p tcp '!' -i lo --dport {{ item }} -j DNAT --to  :{{ hostvars[inventory_hostname]['svr'] | selectattr('https_port', 'equalto', item) | map(attribute='https_traefik_port') | first }}"
  loop: "{{ unique_https_ports }}"

- name: Ip tables hijacking http -> traefik_http
  shell: "ip6tables -t nat -A PREROUTING -p tcp '!' -i lo --dport {{ item }} -j DNAT --to  :{{ hostvars[inventory_hostname]['svr'] | selectattr('http_port', 'equalto', item) | map(attribute='http_traefik_port') | first }}"
  loop: "{{ unique_http_ports }}"

- name: Ip tables hijacking https -> traefik_https
  shell: "ip6tables -t nat -A PREROUTING -p tcp '!' -i lo --dport {{ item }} -j DNAT --to  :{{ hostvars[inventory_hostname]['svr'] | selectattr('https_port', 'equalto', item) | map(attribute='https_traefik_port') | first }}"
  loop: "{{ unique_https_ports }}"



- name: Cleaning up files and folders
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "traefik_bundle.tar.gz"
